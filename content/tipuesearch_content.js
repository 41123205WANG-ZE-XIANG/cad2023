var tipuesearch = {"pages": [{'title': 'About', 'text': ' https://github.com/mdecycu/cmsite  \n', 'tags': '', 'url': 'About.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n', 'tags': '', 'url': 'Brython.html'}, {'title': 'HW', 'text': '', 'tags': '', 'url': 'HW.html'}, {'title': 'W6-7', 'text': '*\xa0 利用上次存在隨身碟的網路設定繼續建立完成 \n *\xa0\xa0 進行九人一組安排固定座位, 由組長建立 cad2023_bg1 ~ cad2023_bg6, 並將 mdecycu 設為協同者. \n *\xa0\xa0 學員展示用 IPv6 位址: 2b 學員展示用 IPv6 位址: 2001:288:6004:17:2023:cadb::班級名單序號', 'tags': '', 'url': 'W6-7.html'}, {'title': 'W15', 'text': '圓軌永動機 \n 1.繪製底座草圖 \n \n \n 2.擠出底座 \n \n \n 3.繪製圓軌草圖 \n \n \n 4.擠出圓軌 \n \n \n 5.擠出圓軌薄底 \n \n \n 6.繪製弧度 \n \n \n 7.擠出弧度 \n \n \n \n 8.成體 \n \n \n 9.鋼球 \n', 'tags': '', 'url': 'W15.html'}, {'title': 'W13', 'text': '如何利用 ChatGPT 協助解決座位排序與列印問題 \n 輸入問題1 : 請利用 Python 讀取下列檔案名稱為 2b_w12_seat.txt "2b stud num\xa0\xa0 \xa0seat \n ChatGPT回覆問題1 :\xa0 當然，您可以使用 Python 來讀取名稱為 "2b_w12_seat.txt" 的檔案 ,\xa0並顯示其內容 .\xa0 這個程式碼(備註1) 會打開指定的檔案，讀取其內容，然後顯示在終端機上。請確保檔案 "2b_w12_seat.txt" 與您的程式碼位於相同的目錄下，或者您可以提供完整的檔案路徑。 \n \n 備註1 :\xa0 以上是一個簡單的範例程式碼 \n \n 輸入問題2:\xa0假如前面程式中的座位號第一個 index 代表"列"而第二個 index 代表行, 請延續上個程式, 由左到右作為每一列的順序, 而且希望陣列排序是列出該位置上的學員學號。 \n ChatGPT回覆2:\xa0如果你希望根據座位號的列和行來排序學號，可以稍微修改程式碼以處理這一需求。這個修改版的程式碼會將座位號的列和行轉換為整數，然後根據列和行的順序進行排序。最後，列印排序後的學號和座位號。以下是修改後的程式碼： \n \n 輸入問題三:\xa0假如 "2b_w12_seat.txt" 可以從 "https://mde.tw/cadnote/downloads/2b_w12_seat.txt" 這個網址讀取, 而且希望將上一個 Python 程式改用 Brython 編寫, 要如何修改? \n ChatGPT回覆三:\xa0Brython（Browser Python）是一個允許在瀏覽器中運行 Python 代碼的工具。要將之前的 Python 程式改用 Brython 編寫，首先確保你的瀏覽器支援 Brython。這個 HTML 文件包含了 Brython 的引入，並使用 \xa0 <script type="text/python"> \xa0 塊嵌入了 Python 代碼。注意，由於使用 fetch 從網路中獲取檔案，因此需要考慮可能的跨域問題。在實際應用中，你可能需要處理跨域問題，例如使用CORS（跨來源資源共享）。此外，請確保在運行 Brython 之前已經載入了所需的 Brython 腳本。在這個例子中，我使用了 jsdelivr CDN 上的 Brython 腳本。為了避免這些問題，我們可以使用 JavaScript 來在瀏覽器中讀取檔案，然後將檔案內容傳遞給 Brython。然後可以使用以下的範例程式碼： \n (因為我們不使用 ChatGPT 混用 Javascript 與 Brython 的建立, 所以此地不列出其回覆的原始碼) \n \n 輸入問題四:\xa0假如我們已經知道 Brython 可以利用 open(https://mde.tw/cadnote/downloads/2b_w12_seat.txt).read() 或 open(https://mde.tw/cadnote/downloads/2b_w12_seat.txt).readlines() 讀取到檔案, 可以將上一個程式全部改用 Brython 完成嗎?\xa0 \n ChatGPT回覆四:\xa0當使用 Brython 時，由於 JavaScript 的 \xa0 Array.sort() \xa0 方法是就地排序，而 Python 的 \xa0 sorted() \xa0 函數是返回一個新的已排序的列表，為了實現相同的排序行為，我們可以使用 Python 的 \xa0 sorted() \xa0 函數並將結果轉換為 JavaScript 的陣列。 這個程式碼使用 \xa0 sorted() \xa0 函數進行排序，然後透過 \xa0 map() \xa0 方法將結果轉換為 JavaScript 的陣列。最後，使用 JavaScript 的迴圈來列印排序後的結果。 \n \n 以上修改後的程式碼行不通，完整程式碼在這:\xa0 w13_chatgpt_brython.py', 'tags': '', 'url': 'W13.html'}, {'title': '任務一', 'text': '', 'tags': '', 'url': '任務一.html'}, {'title': 'Fusion 360', 'text': '從官網利用學校帳號申請學生方案下載 \n ====================== \n 開始繪圖 \n 1.接鐵球的圓碗 \n \n \n 2.軌道 \n \n \n 3.底座 \n \n \n 4.支撐桿 \n \n \n 5.鐵球 \n \n \n 6.組合圖 \n', 'tags': '', 'url': 'Fusion 360.html'}, {'title': 'W4-W5', 'text': '*\xa0 今天老師叫我們先建立一個考試帳號 , 由這個\xa0 http://exam.cycu.org/ \xa0去建立 \n \n *\xa0 先建立一個 replit並且與github.com做連結 ,\xa0 利用replit把github更新並推送更新內容至靜態網頁 \n \n *\xa0 建立個人倉儲與靜態 \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'W4-W5.html'}]};